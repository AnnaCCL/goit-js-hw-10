{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  start: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  mins: document.querySelector('span[data-minutes]'),\n  secs: document.querySelector('span[data-seconds]'),\n};\n\nlet intervalId = null;\nrefs.start.disabled = true;\nrefs.input.disabled = false;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      refs.start.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      return;\n    } else {\n      refs.start.disabled = false;\n    }\n    refs.start.addEventListener('click', () => {\n      intervalId = setInterval(() => {\n        const differenceInTime = selectedDates[0] - new Date();\n\n        if (differenceInTime < 1000) {\n          clearInterval(intervalId);\n        }\n        const result = convertMs(differenceInTime);\n        viewOfTimer(result);\n      }, 1000);\n\n      if (intervalId) {\n        refs.start.disabled = true;\n        refs.input.disabled = true;\n      }\n    });\n  },\n};\nflatpickr('#datetime-picker', options);\n\nfunction viewOfTimer({ days, hours, minutes, seconds }) {\n  refs.days.textContent = `${days}`;\n  refs.hours.textContent = `${hours}`;\n  refs.mins.textContent = `${minutes}`;\n  refs.secs.textContent = `${seconds}`;\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = addLeadingZero(Math.floor(ms / day));\n  const hours = addLeadingZero(Math.floor((ms % day) / hour));\n  const minutes = addLeadingZero(Math.floor(((ms % day) % hour) / minute));\n  const seconds = addLeadingZero(\n    Math.floor((((ms % day) % hour) % minute) / second)\n  );\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["refs","intervalId","options","selectedDates","iziToast","differenceInTime","result","convertMs","viewOfTimer","flatpickr","days","hours","minutes","seconds","addLeadingZero","value","ms"],"mappings":"+IAKA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,KAAM,SAAS,cAAc,oBAAoB,EACjD,KAAM,SAAS,cAAc,oBAAoB,CACnD,EAEA,IAAIC,EAAa,KACjBD,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAEtB,MAAME,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CAErB,GADA,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAI,IAAI,KAAQ,CACjCH,EAAK,MAAM,SAAW,GACtBI,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACD,MACN,MACMJ,EAAK,MAAM,SAAW,GAExBA,EAAK,MAAM,iBAAiB,QAAS,IAAM,CACzCC,EAAa,YAAY,IAAM,CAC7B,MAAMI,EAAmBF,EAAc,CAAC,EAAI,IAAI,KAE5CE,EAAmB,KACrB,cAAcJ,CAAU,EAE1B,MAAMK,EAASC,EAAUF,CAAgB,EACzCG,EAAYF,CAAM,CACnB,EAAE,GAAI,EAEHL,IACFD,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAE9B,CAAK,CACF,CACH,EACAS,EAAU,mBAAoBP,CAAO,EAErC,SAASM,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDb,EAAK,KAAK,YAAc,GAAGU,CAAI,GAC/BV,EAAK,MAAM,YAAc,GAAGW,CAAK,GACjCX,EAAK,KAAK,YAAc,GAAGY,CAAO,GAClCZ,EAAK,KAAK,YAAc,GAAGa,CAAO,EACpC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASR,EAAUS,EAAI,CAMrB,MAAMN,EAAOI,EAAe,KAAK,MAAME,EAAK,KAAG,CAAC,EAC1CL,EAAQG,EAAe,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EACpDJ,EAAUE,EAAe,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EACjEH,EAAUC,EACd,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CACtD,EAEE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}